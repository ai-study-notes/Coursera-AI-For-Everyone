In this video and
the next video, I hope to help you
develop intuition about what AI can and cannot do. In practice before I commit
to a specific AI project, I'll usually have either
myself or engineers do technical diligence on a project to make sure that
it is feasible. This means locally data, locally input and output, A and B, and just
thinking through if this is something
AI can really do. What I've seen
unfortunately, is that, some CEOs can have overinflate
the exploitation of AI, and can ask engineers
to do things that today's AI just cannot do. One of the challenges is that, the media as well as the
academic literature, tends to only report on positive results or
success stories using AI. We see a string of success stories and
no failure stories. People sometimes think
AI can do everything, , and unfortunately,
that's just not true. What I want to do in this
next video is to show you a few examples of what
today's AI technology can do, but also what it cannot do. I hope that this will help you hone your intuition about what might be more or less
promising projects to select for your company. Previously you saw this list
of AI applications from spam filtering to speech
recognition to machine translation, and so on. One imperfect rule of
thumb you can use to decide what supervised
learning may or may not be able
to do, is that, pretty much anything you could do with a second of thought, we can probably now or
soon automate using supervised learning using
this input-output mapping. For example, in order to determine the
position of other cars, that's something that you can
do with less than a second. In order to tell if a
phone is scratched, you can look at it, and you can tell in less than a second. In order to understand, at least transcribe
what was said, it doesn't take that
many seconds of thought. While this is an
imperfect rule of thumb, it maybe gives you a
way to quickly think of some examples of tasks
that AI systems can do. Whereas in contrast,
something that AI today cannot do would be accurately predicting
the stock market. Say, predict the future
price of some company stock, given only the historical
price of that stock. This is something that a
person probably can't do in one second or even
longer than a second. It's probably not
possible to get machine learning to do
this accurately either. Let's look in greater
detail at this. Say the task we
want to tackle is, given the recent
price of a stock, that's the input A, predict the price at a future
point in time, say, a month into the future, that's the output B. What would happen if you were to apply machine
learning to this? Well, a simpler algorithm might try to fit a straight
line to the data, but depending on what period
of time you fit the data to, you might get a
red line like this or if you fit it to
this narrow window, you might get this blue line. Depending on the details
of the implementation, this particular
algorithm might give wildly varying output values. The main problem with this
application, is that, the past history of
a stock price is just not very predictive
of the future stock price, which is why attempts to use machine learning this way
haven't been successful. Future stock prices
are so random that it's just hard for AI to
predict it accurately. By the way, for completeness, I should say that predicting
stock price based only on the historical price of the same stock seems
to be impossible, but there are stock traders that sometimes
find other inputs. For example, if they
managed to legally obtain some web traffic or foot
traffic data that helps them estimate what the company's
sales were, then that, in combination with the
historical price data, might make it possible for the algorithm to have some
predictive power, however, these other inputs are typically complex or costly to acquire, and still can't overcome
the intrinsically, somewhat random nature
of the stock market. To hold your intuition
about how to quickly filter feasible or not
feasible projects, here are a couple of other rules of thumb about what makes a machine learning problem easier or more likely
to be feasible. One, learning a simple concept is more likely to be feasible. But what does it mean for something to be a
simple concept? There's no formal
definition of it, but if it is something
that takes you less than a second
of mental thought or maybe just a very small
number of seconds of mental thought to come
up with a conclusion, then that would be suggestive of it being a simple concept. If you're looking
outside the window of a self driving car to
spot the other cars, well, that would seem like a
relatively simple concept. Whereas in contrast,
trying to come up with clever signals to predict
a given company's sales, well, that seems like
less of a simple concept. Second, a machine learning
problem is more likely to be feasible if you have
lots of data available. Here, data means both the
input A and the output B that you want the AI system to have in your A to B or
input-output mapping. For example, in trying to determine whether a phone
is scratched or not, the input A would be a
set of images of phones, and the output B
could be a label identifying the phone as being scratched
or not scratched. Then if you have thousands of pictures of phones
with both A and B, the odds of you building a machine learning
system to detect scratches accurately
would be much higher. AI is the new electricity, and it is transforming
every industry, but it's also not magic, and you can't do
everything under the sun. I hope that this video
started to help you horn your intuitions about
what it can and cannot do, and increase the odds
of your selecting feasible and valuable projects for maybe your teams
to try working on. In order to help you continue
developing your intuition, I would like to show you more examples of what
AI can and cannot do. Let's go onto the next video.